{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a6ca7ad5e1b42814b637.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport VisiblePosts from \"../src/components/VisiblePosts\";\r\nimport Filters from \"../src/components/Filters\";\r\nimport ShareHeader from \"../src/components/ShareHeader\";\r\nimport { withRouter } from \"next/router\";\r\nimport { getData } from \"../src/firebase/firebase\";\r\nimport DetailView from \"../src/components/DetailView\";\r\nimport SetDocumentTitle from \"../src/components/SetDocumentTitle\";\r\n\r\n//we are fetching all latest posts from firebase\r\n//and sending all data  for index page\r\n//when somebody clicks on post for  detail view we are again making request to same index page but\r\n//this time we only sending queried data\r\n//we are using nextjs' shallow routing feature\r\n//bcoz of which getinitialprops function is not called everytime\r\n\r\nclass Index extends Component {\r\n  state = {\r\n    filterString: \"\",\r\n    stateFilterString: \"\"\r\n  };\r\n  handleFilter = (filterText, isActive) => {\r\n    if (isActive) {\r\n      this.setState(() => ({ filterString: filterText }));\r\n    } else {\r\n      this.setState(() => ({ filterString: \"\", stateFilterString: \"\" }));\r\n    }\r\n  };\r\n  handleStateFilter = (filterObj, isActive) => {\r\n    if (isActive) {\r\n      this.setState(() => filterObj);\r\n    } else {\r\n      this.setState(() => ({ filterString: \"\", stateFilterString: \"\" }));\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <ShareHeader>\r\n        <Filters\r\n          handleFilter={this.handleFilter}\r\n          handleStateFilter={this.handleStateFilter}\r\n        />\r\n        <VisiblePosts\r\n          visiblePosts={this.props.latestPosts}\r\n          filterString={this.state.filterString}\r\n          stateFilterString={this.state.stateFilterString}\r\n        />\r\n      </ShareHeader>\r\n    );\r\n  }\r\n}\r\n\r\n//below component returns queried data wrapped in detailview component or index compo\r\nconst Page = props => {\r\n  const { pathname, query } = props.router;\r\n  const { latestPosts } = props;\r\n  let detailsOf = [];\r\n  detailsOf = latestPosts.filter(post =>\r\n    query.id === post.key ? post : false\r\n  );\r\n  return pathname === \"/\" && !Object.keys(query).length ? (\r\n    <Index latestPosts={latestPosts} />\r\n  ) : detailsOf[0] ? (\r\n    <SetDocumentTitle title={`${detailsOf[0].dept},${detailsOf[0].postName}`}>\r\n      <DetailView {...detailsOf[0]} />\r\n    </SetDocumentTitle>\r\n  ) : (\r\n    <p>I have no Idea what is going on</p>\r\n  );\r\n};\r\nPage.getInitialProps = async () => {\r\n  //we fetch data from firebase and map to props of Page component;\r\n  return await getData(\"latestPosts\");\r\n};\r\nexport default withRouter(Page);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAjCA;AACA;AACA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}